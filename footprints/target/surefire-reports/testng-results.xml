<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="34" failed="6" ignored="12" total="70" passed="18">
  <reporter-output>
    <line>
      <![CDATA[About to begin executing Test ServiceProviderCaseRegistration]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Skipped]]>
    </line>
  </reporter-output>
  <suite name="regression testing" duration-ms="849946" started-at="2018-11-15T08:10:25Z" finished-at="2018-11-15T08:24:35Z">
    <groups>
      <group name="spcase registration">
        <method signature="SPcasereg.TC_SCPR_004()[pri:5, instance:maintest.SPcasereg@7471b5]" name="TC_SCPR_004" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_001()[pri:2, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_001" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_002()[pri:3, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_002" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_003()[pri:4, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_003" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_005()[pri:6, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_005" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_006()[pri:7, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_006" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_007()[pri:8, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_007" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_008()[pri:9, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_008" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_009()[pri:10, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_009" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_010()[pri:11, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_010" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_011()[pri:12, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_011" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_022()[pri:23, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_022" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_023()[pri:24, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_023" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_024()[pri:25, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_024" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_025()[pri:26, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_025" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_026()[pri:27, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_026" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_027()[pri:28, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_027" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.login()[pri:1, instance:maintest.SPcasereg@7471b5]" name="login" class="maintest.SPcasereg"/>
      </group> <!-- spcase registration -->
      <group name="not applicable">
        <method signature="SPcasereg.TC_SPNAPP_001()[pri:58, instance:maintest.SPcasereg@7471b5]" name="TC_SPNAPP_001" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCEP_001()[pri:59, instance:maintest.SPcasereg@7471b5]" name="TC_SPCEP_001" class="maintest.SPcasereg"/>
      </group> <!-- not applicable -->
      <group name="insuff">
        <method signature="SPcasereg.TC_SPINF_001()[pri:29, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_001" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_002()[pri:30, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_002" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_003()[pri:31, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_003" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_004()[pri:32, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_004" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_005()[pri:33, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_005" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_006()[pri:34, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_006" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_007()[pri:35, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_007" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_008()[pri:36, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_008" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_009()[pri:37, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_009" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_010()[pri:38, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_010" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_011()[pri:39, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_011" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_014()[pri:40, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_014" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_017()[pri:41, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_017" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_020()[pri:42, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_020" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_023()[pri:43, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_023" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_026()[pri:44, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_026" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_029()[pri:45, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_029" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_032()[pri:46, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_032" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_035()[pri:47, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_035" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_038()[pri:48, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_038" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_012()[pri:49, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_012" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_015()[pri:50, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_015" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_018()[pri:51, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_018" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_021()[pri:52, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_021" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_024()[pri:57, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_024" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_027()[pri:54, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_027" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_030()[pri:56, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_030" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_033()[pri:55, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_033" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_039()[pri:53, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_039" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.login()[pri:1, instance:maintest.SPcasereg@7471b5]" name="login" class="maintest.SPcasereg"/>
      </group> <!-- insuff -->
      <group name="smoketest">
        <method signature="SPcasereg.TC_SPCR_001()[pri:2, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_001" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_010()[pri:11, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_010" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_022()[pri:23, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_022" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_023()[pri:24, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_023" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_024()[pri:25, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_024" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_025()[pri:26, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_025" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_026()[pri:27, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_026" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPCR_027()[pri:28, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_027" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.login()[pri:1, instance:maintest.SPcasereg@7471b5]" name="login" class="maintest.SPcasereg"/>
      </group> <!-- smoketest -->
    </groups>
    <test name="FullFlow" duration-ms="0" started-at="2018-11-15T08:10:25Z" finished-at="2018-11-15T08:10:25Z">
    </test> <!-- FullFlow -->
    <test name="ServiceProviderCaseRegistration" duration-ms="849931" started-at="2018-11-15T08:10:25Z" finished-at="2018-11-15T08:24:35Z">
      <class name="maintest.SPcasereg">
        <test-method status="PASS" signature="beforeSuit()[pri:0, instance:maintest.SPcasereg@7471b5]" name="beforeSuit" is-config="true" duration-ms="250" started-at="2018-11-15T08:10:24Z" finished-at="2018-11-15T08:10:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:maintest.SPcasereg@7471b5]" name="beforetest" is-config="true" duration-ms="3804" started-at="2018-11-15T08:10:25Z" finished-at="2018-11-15T08:10:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="15" started-at="2018-11-15T08:10:29Z" finished-at="2018-11-15T08:10:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="login()[pri:1, instance:maintest.SPcasereg@7471b5]" name="login" duration-ms="14901" started-at="2018-11-15T08:10:29Z" finished-at="2018-11-15T08:10:44Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:44Z" finished-at="2018-11-15T08:10:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=SPcasereg.login()[pri:1, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_001()[pri:2, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_001" duration-ms="4079" started-at="2018-11-15T08:10:44Z" finished-at="2018-11-15T08:10:48Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_001 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:44Z" finished-at="2018-11-15T08:10:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:48Z" finished-at="2018-11-15T08:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_001 status=SUCCESS method=SPcasereg.TC_SPCR_001()[pri:2, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:48Z" finished-at="2018-11-15T08:10:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_002()[pri:3, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_002" duration-ms="3718" started-at="2018-11-15T08:10:48Z" finished-at="2018-11-15T08:10:51Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_002 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_002 status=SUCCESS method=SPcasereg.TC_SPCR_002()[pri:3, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_003()[pri:4, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_003" duration-ms="49" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_003 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_003()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SCPR_004()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SCPR_004()[pri:5, instance:maintest.SPcasereg@7471b5]" name="TC_SCPR_004" duration-ms="47" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SCPR_004 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_003 status=SUCCESS method=SPcasereg.TC_SPCR_003()[pri:4, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_003()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_005()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SCPR_004 status=SUCCESS method=SPcasereg.TC_SCPR_004()[pri:5, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SCPR_004()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_005()[pri:6, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_005" duration-ms="48" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_005 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_005 status=SUCCESS method=SPcasereg.TC_SPCR_005()[pri:6, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_005()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_006()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_006()[pri:7, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_006" duration-ms="43" started-at="2018-11-15T08:10:51Z" finished-at="2018-11-15T08:10:52Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_006 -->
        <test-method status="PASS" signature="TC_SPCR_007()[pri:8, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_007" duration-ms="47" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_007 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_007()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_006 status=SUCCESS method=SPcasereg.TC_SPCR_006()[pri:7, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_006()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_008()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_007 status=SUCCESS method=SPcasereg.TC_SPCR_007()[pri:8, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_007()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_008()[pri:9, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_008" duration-ms="47" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_008 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_009()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_009()[pri:10, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_009" duration-ms="47" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_009 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_008 status=SUCCESS method=SPcasereg.TC_SPCR_008()[pri:9, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_008()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_009 status=SUCCESS method=SPcasereg.TC_SPCR_009()[pri:10, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_009()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_010()[pri:11, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_010" duration-ms="84300" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:12:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_010 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:10:52Z" finished-at="2018-11-15T08:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_010() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-11-15T08:12:16Z" finished-at="2018-11-15T08:12:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_010 status=SUCCESS method=SPcasereg.TC_SPCR_010()[pri:11, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_010() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="1" started-at="2018-11-15T08:12:16Z" finished-at="2018-11-15T08:12:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_011()[pri:12, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_011" duration-ms="235688" started-at="2018-11-15T08:12:16Z" finished-at="2018-11-15T08:16:12Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_011 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:16:12Z" finished-at="2018-11-15T08:16:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_011 status=SUCCESS method=SPcasereg.TC_SPCR_011()[pri:12, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="TC_SPCR_022()[pri:23, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_022" duration-ms="32553" started-at="2018-11-15T08:16:12Z" finished-at="2018-11-15T08:16:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[HDFC000763 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: HDFC000763 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at maintest.SPcasereg.TC_SPCR_022(SPcasereg.java:1011)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_022 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:16:12Z" finished-at="2018-11-15T08:16:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_022() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="12148" started-at="2018-11-15T08:16:44Z" finished-at="2018-11-15T08:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_022 status=FAILURE method=SPcasereg.TC_SPCR_022()[pri:23, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_022() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="1" started-at="2018-11-15T08:16:56Z" finished-at="2018-11-15T08:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_023() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_023()[pri:24, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_023" duration-ms="22080" started-at="2018-11-15T08:16:56Z" finished-at="2018-11-15T08:17:18Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_023 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:17:18Z" finished-at="2018-11-15T08:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_023 status=SUCCESS method=SPcasereg.TC_SPCR_023()[pri:24, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_023() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_024()[pri:25, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_024" duration-ms="10505" started-at="2018-11-15T08:17:18Z" finished-at="2018-11-15T08:17:29Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_024 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:17:18Z" finished-at="2018-11-15T08:17:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_024() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:17:29Z" finished-at="2018-11-15T08:17:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_024 status=SUCCESS method=SPcasereg.TC_SPCR_024()[pri:25, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_024() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:17:29Z" finished-at="2018-11-15T08:17:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_025() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_025()[pri:26, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_025" duration-ms="32286" started-at="2018-11-15T08:17:29Z" finished-at="2018-11-15T08:18:01Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_025 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-11-15T08:18:01Z" finished-at="2018-11-15T08:18:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_025 status=SUCCESS method=SPcasereg.TC_SPCR_025()[pri:26, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_025() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:18:01Z" finished-at="2018-11-15T08:18:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_026() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_026()[pri:27, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_026" duration-ms="35458" started-at="2018-11-15T08:18:01Z" finished-at="2018-11-15T08:18:37Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_026 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:18:37Z" finished-at="2018-11-15T08:18:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_026 status=SUCCESS method=SPcasereg.TC_SPCR_026()[pri:27, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_026() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="TC_SPCR_027()[pri:28, instance:maintest.SPcasereg@7471b5]" name="TC_SPCR_027" duration-ms="74762" started-at="2018-11-15T08:18:37Z" finished-at="2018-11-15T08:19:51Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.xpath: //span[text()='OK'] (tried for 50 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //span[text()='OK'] (tried for 50 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:113)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:283)
at environment.Utill.confirmAlert(Utill.java:983)
at maintest.SPcasereg.TC_SPCR_027(SPcasereg.java:1148)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.xpath: //span[text()='OK']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
at java.util.Optional.orElseThrow(Optional.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:183)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:180)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCR_027 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:18:37Z" finished-at="2018-11-15T08:18:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_027() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="13739" started-at="2018-11-15T08:19:52Z" finished-at="2018-11-15T08:20:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_027 status=FAILURE method=SPcasereg.TC_SPCR_027()[pri:28, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_027() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:20:05Z" finished-at="2018-11-15T08:20:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPINF_001()[pri:29, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_001" duration-ms="59297" started-at="2018-11-15T08:20:05Z" finished-at="2018-11-15T08:21:05Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_001 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:21:05Z" finished-at="2018-11-15T08:21:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_001 status=SUCCESS method=SPcasereg.TC_SPINF_001()[pri:29, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_002()[pri:30, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_002" duration-ms="113331" started-at="2018-11-15T08:21:05Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_001" finished-at="2018-11-15T08:22:58Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_002 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:21:05Z" finished-at="2018-11-15T08:21:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_002() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:22:58Z" finished-at="2018-11-15T08:22:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_002 status=SUCCESS method=SPcasereg.TC_SPINF_002()[pri:30, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_002() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="TC_SPINF_003()[pri:31, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_003" duration-ms="1285" started-at="2018-11-15T08:22:58Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_001" finished-at="2018-11-15T08:22:59Z">
          <exception class="java.lang.StackOverflowError">
            <full-stacktrace>
              <![CDATA[java.lang.StackOverflowError
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449)
at java.lang.StringBuilder.append(StringBuilder.java:136)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
at pages.CaseRegistration.isSelected(CaseRegistration.java:689)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.StackOverflowError -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_003 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:22:58Z" finished-at="2018-11-15T08:22:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_003() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="14823" started-at="2018-11-15T08:22:59Z" finished-at="2018-11-15T08:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_003 status=FAILURE method=SPcasereg.TC_SPINF_003()[pri:31, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_003() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="TC_SPINF_004()[pri:32, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_004" duration-ms="3064" started-at="2018-11-15T08:23:14Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_001" finished-at="2018-11-15T08:23:17Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//td[text()='Current/Latest Employment']/../td[2]//input"}
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
*** Element info: {Using=xpath, value=//td[text()='Current/Latest Employment']/../td[2]//input}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//td[text()='Current/Latest Employment']/../td[2]//input"}
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
*** Element info: {Using=xpath, value=//td[text()='Current/Latest Employment']/../td[2]//input}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at environment.Utill.find(Utill.java:128)
at environment.Utill.click(Utill.java:254)
at pages.CaseRegistration.selectcheck(CaseRegistration.java:287)
at maintest.SPcasereg.TC_SPINF_004(SPcasereg.java:1237)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_004 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:23:14Z" finished-at="2018-11-15T08:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_004() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="11546" started-at="2018-11-15T08:23:17Z" finished-at="2018-11-15T08:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_004 status=FAILURE method=SPcasereg.TC_SPINF_004()[pri:32, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_004() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="TC_SPINF_005()[pri:33, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_005" duration-ms="3016" started-at="2018-11-15T08:23:29Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_001" finished-at="2018-11-15T08:23:32Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"id","selector":"ctl00_imgHome"}
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
*** Element info: {Using=id, value=ctl00_imgHome}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"ctl00_imgHome"}
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
*** Element info: {Using=id, value=ctl00_imgHome}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:368)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at environment.Utill.find(Utill.java:148)
at environment.Utill.click(Utill.java:254)
at pages.Home.homepage(Home.java:201)
at maintest.SPcasereg.TC_SPINF_005(SPcasereg.java:1251)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_005 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:23:29Z" finished-at="2018-11-15T08:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_005() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="15426" started-at="2018-11-15T08:23:32Z" finished-at="2018-11-15T08:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_005 status=FAILURE method=SPcasereg.TC_SPINF_005()[pri:33, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_005() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="1" started-at="2018-11-15T08:23:47Z" finished-at="2018-11-15T08:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_006() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TC_SPINF_006()[pri:34, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_006" duration-ms="40797" started-at="2018-11-15T08:23:47Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_005" finished-at="2018-11-15T08:24:28Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
*** Element info: {Using=id, value=loading-bar-spinner}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
*** Element info: {Using=id, value=loading-bar-spinner}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:368)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at environment.Utill.find(Utill.java:148)
at environment.Utill$2.apply(Utill.java:900)
at environment.Utill$2.apply(Utill.java:897)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
at environment.Utill.waitUntilLoaderisInvisible(Utill.java:897)
at pages.Home.homepage(Home.java:202)
at maintest.SPcasereg.TC_SPINF_006(SPcasereg.java:1286)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_006 -->
        <test-method status="FAIL" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="6057" started-at="2018-11-15T08:24:28Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_006 status=FAILURE method=SPcasereg.TC_SPINF_006()[pri:34, instance:maintest.SPcasereg@7471b5] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_006() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:26)
at ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy.getFullHeight(ViewportPastingStrategy.java:23)
at ru.yandex.qatools.ashot.screentaker.VerticalPastingShootingStrategy.getScreenshot(VerticalPastingShootingStrategy.java:33)
at ru.yandex.qatools.ashot.screentaker.ScreenTaker.take(ScreenTaker.java:23)
at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:166)
at environment.Utill.getScreenshot(Utill.java:108)
at maintest.SPcasereg.tearDown(SPcasereg.java:2161)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485)
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:24)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="TC_SPINF_017()[pri:41, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_017" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_017()[pri:41, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_017()[pri:41, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_017 -->
        <test-method status="SKIP" signature="TC_SPINF_011()[pri:39, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_011" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_010" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:26)
at ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy.getFullHeight(ViewportPastingStrategy.java:23)
at ru.yandex.qatools.ashot.screentaker.VerticalPastingShootingStrategy.getScreenshot(VerticalPastingShootingStrategy.java:33)
at ru.yandex.qatools.ashot.screentaker.ScreenTaker.take(ScreenTaker.java:23)
at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:166)
at environment.Utill.getScreenshot(Utill.java:108)
at maintest.SPcasereg.tearDown(SPcasereg.java:2161)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485)
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:24)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_011 -->
        <test-method status="SKIP" signature="TC_SPINF_014()[pri:40, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_014" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_014()[pri:40, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_014()[pri:40, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_014 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=SPcasereg.TC_SPINF_011()[pri:39, instance:maintest.SPcasereg@7471b5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TC_SPINF_008()[pri:36, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_008" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_006" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_008()[pri:36, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_008()[pri:36, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_008 -->
        <test-method status="SKIP" signature="TC_SPINF_007()[pri:35, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_007" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_006" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_007()[pri:35, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_007()[pri:35, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_007 -->
        <test-method status="SKIP" signature="TC_SPINF_010()[pri:38, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_010" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_006" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_010()[pri:38, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_010()[pri:38, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_010 -->
        <test-method status="SKIP" signature="TC_SPINF_009()[pri:37, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_009" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_006" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_009()[pri:37, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_009()[pri:37, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_009 -->
        <test-method status="SKIP" signature="TC_SPINF_020()[pri:42, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_020" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_020()[pri:42, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_020()[pri:42, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_020 -->
        <test-method status="SKIP" signature="TC_SPINF_032()[pri:46, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_032" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_032()[pri:46, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_032()[pri:46, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_032 -->
        <test-method status="SKIP" signature="TC_SPINF_030()[pri:56, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_030" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_030()[pri:56, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_030()[pri:56, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_030 -->
        <test-method status="SKIP" signature="TC_SPINF_027()[pri:54, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_027" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_027()[pri:54, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_027()[pri:54, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_027 -->
        <test-method status="SKIP" signature="TC_SPINF_015()[pri:50, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_015" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_015()[pri:50, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_015()[pri:50, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_015 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_012() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TC_SPINF_038()[pri:48, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_038" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_038()[pri:48, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_038()[pri:48, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_038 -->
        <test-method status="SKIP" signature="TC_SPINF_021()[pri:52, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_021" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_021()[pri:52, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_021()[pri:52, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_021 -->
        <test-method status="SKIP" signature="TC_SPINF_039()[pri:53, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_039" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_039()[pri:53, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_039()[pri:53, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_039 -->
        <test-method status="SKIP" signature="TC_SPINF_035()[pri:47, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_035" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_035()[pri:47, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_035()[pri:47, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_035 -->
        <test-method status="SKIP" signature="TC_SPNAPP_001()[pri:58, instance:maintest.SPcasereg@7471b5]" name="TC_SPNAPP_001" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_024" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:26)
at ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy.getFullHeight(ViewportPastingStrategy.java:23)
at ru.yandex.qatools.ashot.screentaker.VerticalPastingShootingStrategy.getScreenshot(VerticalPastingShootingStrategy.java:33)
at ru.yandex.qatools.ashot.screentaker.ScreenTaker.take(ScreenTaker.java:23)
at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:166)
at environment.Utill.getScreenshot(Utill.java:108)
at maintest.SPcasereg.tearDown(SPcasereg.java:2161)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485)
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:24)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPNAPP_001 -->
        <test-method status="SKIP" signature="TC_SPINF_018()[pri:51, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_018" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_018()[pri:51, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_018()[pri:51, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_018 -->
        <test-method status="SKIP" signature="TC_SPINF_012()[pri:49, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_012" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_038" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:26)
at ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy.getFullHeight(ViewportPastingStrategy.java:23)
at ru.yandex.qatools.ashot.screentaker.VerticalPastingShootingStrategy.getScreenshot(VerticalPastingShootingStrategy.java:33)
at ru.yandex.qatools.ashot.screentaker.ScreenTaker.take(ScreenTaker.java:23)
at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:166)
at environment.Utill.getScreenshot(Utill.java:108)
at maintest.SPcasereg.tearDown(SPcasereg.java:2161)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485)
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:24)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_012 -->
        <test-method status="SKIP" signature="TC_SPINF_023()[pri:43, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_023" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_023()[pri:43, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_023()[pri:43, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_023 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=SPcasereg.TC_SPINF_012()[pri:49, instance:maintest.SPcasereg@7471b5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_012() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="TC_SPINF_033()[pri:55, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_033" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_033()[pri:55, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_033()[pri:55, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_033 -->
        <test-method status="SKIP" signature="TC_SPINF_029()[pri:45, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_029" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_029()[pri:45, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_029()[pri:45, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_029 -->
        <test-method status="SKIP" signature="TC_SPINF_024()[pri:57, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_024" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_012" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_024()[pri:57, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_024()[pri:57, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_024 -->
        <test-method status="SKIP" signature="TC_SPINF_026()[pri:44, instance:maintest.SPcasereg@7471b5]" name="TC_SPINF_026" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPINF_026()[pri:44, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPINF_026()[pri:44, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_026 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPNAPP_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TC_SPDOC_006()[pri:68, instance:maintest.SPcasereg@7471b5]" name="TC_SPDOC_006" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPDOC_005" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPDOC_006()[pri:68, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPDOC_006()[pri:68, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_006 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=SPcasereg.TC_SPDOC_001()[pri:63, instance:maintest.SPcasereg@7471b5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPDOC_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="TC_SPCEP_002()[pri:60, instance:maintest.SPcasereg@7471b5]" name="TC_SPCEP_002" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPCEP_001" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPCEP_002()[pri:60, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPCEP_002()[pri:60, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCEP_002 -->
        <test-method status="SKIP" signature="TC_SPCEP_004()[pri:62, instance:maintest.SPcasereg@7471b5]" name="TC_SPCEP_004" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPCEP_003" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPCEP_004()[pri:62, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPCEP_004()[pri:62, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCEP_004 -->
        <test-method status="SKIP" signature="TC_SPDOC_002()[pri:64, instance:maintest.SPcasereg@7471b5]" name="TC_SPDOC_002" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPDOC_001" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPDOC_002()[pri:64, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPDOC_002()[pri:64, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_002 -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:maintest.SPcasereg@7471b5]" name="teardown" is-config="true" duration-ms="670" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="SKIP" signature="TC_SPCEP_003()[pri:61, instance:maintest.SPcasereg@7471b5]" name="TC_SPCEP_003" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPCEP_002" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPCEP_003()[pri:61, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPCEP_003()[pri:61, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCEP_003 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPDOC_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCEP_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=SPcasereg.TC_SPCEP_001()[pri:59, instance:maintest.SPcasereg@7471b5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCEP_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="TC_SPDOC_005()[pri:67, instance:maintest.SPcasereg@7471b5]" name="TC_SPDOC_005" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPDOC_004" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPDOC_005()[pri:67, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPDOC_005()[pri:67, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_005 -->
        <test-method status="SKIP" signature="TC_SPDOC_001()[pri:63, instance:maintest.SPcasereg@7471b5]" name="TC_SPDOC_001" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPCEP_003" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:26)
at ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy.getFullHeight(ViewportPastingStrategy.java:23)
at ru.yandex.qatools.ashot.screentaker.VerticalPastingShootingStrategy.getScreenshot(VerticalPastingShootingStrategy.java:33)
at ru.yandex.qatools.ashot.screentaker.ScreenTaker.take(ScreenTaker.java:23)
at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:166)
at environment.Utill.getScreenshot(Utill.java:108)
at maintest.SPcasereg.tearDown(SPcasereg.java:2161)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485)
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:24)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_001 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@7471b5]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-11-15T08:24:34Z" finished-at="2018-11-15T08:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=SPcasereg.TC_SPNAPP_001()[pri:58, instance:maintest.SPcasereg@7471b5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPNAPP_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="TC_SPCEP_001()[pri:59, instance:maintest.SPcasereg@7471b5]" name="TC_SPCEP_001" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPNAPP_001" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:26)
at ru.yandex.qatools.ashot.screentaker.ViewportPastingStrategy.getFullHeight(ViewportPastingStrategy.java:23)
at ru.yandex.qatools.ashot.screentaker.VerticalPastingShootingStrategy.getScreenshot(VerticalPastingShootingStrategy.java:33)
at ru.yandex.qatools.ashot.screentaker.ScreenTaker.take(ScreenTaker.java:23)
at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:166)
at environment.Utill.getScreenshot(Utill.java:108)
at maintest.SPcasereg.tearDown(SPcasereg.java:2161)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=70.0.3538.102)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60820}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 70.0.3538.102, webStorageEnabled: true}
Session ID: bce334e84c89fef8bdd58968dc1efd31
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485)
at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:24)
... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPCEP_001 -->
        <test-method status="SKIP" signature="TC_SPDOC_003()[pri:65, instance:maintest.SPcasereg@7471b5]" name="TC_SPDOC_003" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPDOC_002" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPDOC_003()[pri:65, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPDOC_003()[pri:65, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_003 -->
        <test-method status="SKIP" signature="TC_SPDOC_004()[pri:66, instance:maintest.SPcasereg@7471b5]" name="TC_SPDOC_004" duration-ms="0" started-at="2018-11-15T08:24:34Z" depends-on-methods="maintest.SPcasereg.TC_SPDOC_003" finished-at="2018-11-15T08:24:34Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SPcasereg.TC_SPDOC_004()[pri:66, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SPcasereg.TC_SPDOC_004()[pri:66, instance:maintest.SPcasereg@7471b5] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Skipped]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_004 -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:maintest.SPcasereg@7471b5]" name="afterSuite" is-config="true" duration-ms="608" started-at="2018-11-15T08:24:35Z" finished-at="2018-11-15T08:24:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- maintest.SPcasereg -->
    </test> <!-- ServiceProviderCaseRegistration -->
  </suite> <!-- regression testing -->
</testng-results>
