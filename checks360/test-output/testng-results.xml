<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="8" passed="6">
  <reporter-output>
    <line>
      <![CDATA[About to begin executing Test Default test]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.Basic]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Completed executing test Default test]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="240448" started-at="2018-10-10T12:48:00Z" finished-at="2018-10-10T12:52:00Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="240448" started-at="2018-10-10T12:48:00Z" finished-at="2018-10-10T12:52:00Z">
      <class name="maintest.Basic">
        <test-method status="PASS" signature="beforeSuit()[pri:0, instance:maintest.Basic@18355a8]" name="beforeSuit" is-config="true" duration-ms="125" started-at="2018-10-10T18:17:59Z" finished-at="2018-10-10T18:18:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:maintest.Basic@18355a8]" name="beforetest" is-config="true" duration-ms="5315" started-at="2018-10-10T18:18:00Z" finished-at="2018-10-10T18:18:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="9" started-at="2018-10-10T18:18:05Z" finished-at="2018-10-10T18:18:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPDOC_001()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_001" duration-ms="46533" started-at="2018-10-10T18:18:05Z" finished-at="2018-10-10T18:18:51Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_001 -->
        <test-method status="PASS" signature="TC_SPDOC_002()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_002" duration-ms="10457" started-at="2018-10-10T18:18:51Z" finished-at="2018-10-10T18:19:02Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_002 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:18:51Z" finished-at="2018-10-10T18:18:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_002() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-10-10T18:18:51Z" finished-at="2018-10-10T18:18:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_001 status=SUCCESS method=Basic.TC_SPDOC_001()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_001() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:19:02Z" finished-at="2018-10-10T18:19:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_003() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-10-10T18:19:02Z" finished-at="2018-10-10T18:19:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_002 status=SUCCESS method=Basic.TC_SPDOC_002()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_002() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPDOC_003()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_003" duration-ms="10549" started-at="2018-10-10T18:19:02Z" finished-at="2018-10-10T18:19:12Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_003 -->
        <test-method status="PASS" signature="TC_SPDOC_004()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_004" duration-ms="22580" started-at="2018-10-10T18:19:12Z" finished-at="2018-10-10T18:19:35Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_004 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-10-10T18:19:12Z" finished-at="2018-10-10T18:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_003 status=SUCCESS method=Basic.TC_SPDOC_003()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_003() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:19:12Z" finished-at="2018-10-10T18:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_004() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPDOC_005()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_005" duration-ms="114180" started-at="2018-10-10T18:19:35Z" finished-at="2018-10-10T18:21:29Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_005 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-10-10T18:19:35Z" finished-at="2018-10-10T18:19:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_004 status=SUCCESS method=Basic.TC_SPDOC_004()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_004() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:19:35Z" finished-at="2018-10-10T18:19:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_005() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-10-10T18:21:29Z" finished-at="2018-10-10T18:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_005 status=SUCCESS method=Basic.TC_SPDOC_005()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_005() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:21:29Z" finished-at="2018-10-10T18:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_006() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPDOC_006()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_006" duration-ms="4498" started-at="2018-10-10T18:21:29Z" finished-at="2018-10-10T18:21:34Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_006 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-10-10T18:21:34Z" finished-at="2018-10-10T18:21:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_006 status=SUCCESS method=Basic.TC_SPDOC_006()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_006() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:21:34Z" finished-at="2018-10-10T18:21:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_007() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TC_SPDOC_007()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_007" duration-ms="4864" started-at="2018-10-10T18:21:34Z" finished-at="2018-10-10T18:21:39Z">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: 0
	at environment.Utill.isfileexist(Utill.java:714)
	at maintest.Basic.TC_SPDOC_007(Basic.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_007 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="9024" started-at="2018-10-10T18:21:39Z" finished-at="2018-10-10T18:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_007 status=FAILURE method=Basic.TC_SPDOC_007()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_007() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-10T18:21:48Z" finished-at="2018-10-10T18:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_008() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TC_SPDOC_008()[pri:0, instance:maintest.Basic@18355a8]" name="TC_SPDOC_008" duration-ms="3130" started-at="2018-10-10T18:21:48Z" finished-at="2018-10-10T18:21:51Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='tabStrip']/div/ul/li[1]/a/span/span/span"}
  (Session info: headless chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:62254}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.100, webStorageEnabled: true}
Session ID: ce648fc8626ed3dc8af951786332f310
*** Element info: {Using=xpath, value=//*[@id='tabStrip']/div/ul/li[1]/a/span/span/span}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='tabStrip']/div/ul/li[1]/a/span/span/span"}
  (Session info: headless chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:62254}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.100, webStorageEnabled: true}
Session ID: ce648fc8626ed3dc8af951786332f310
*** Element info: {Using=xpath, value=//*[@id='tabStrip']/div/ul/li[1]/a/span/span/span}
	at sun.reflect.GeneratedConstructorAccessor13.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at environment.Utill.find(Utill.java:81)
	at environment.Utill.click_element(Utill.java:161)
	at dataEntry.Address.addresscheck(Address.java:28)
	at maintest.Basic.TC_SPDOC_008(Basic.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.Basic]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPDOC_008 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@18355a8]" name="tearDown" is-config="true" duration-ms="8684" started-at="2018-10-10T18:21:51Z" finished-at="2018-10-10T18:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPDOC_008 status=FAILURE method=Basic.TC_SPDOC_008()[pri:0, instance:maintest.Basic@18355a8] output=Test Method resides in maintest.Basic]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.TC_SPDOC_008() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:maintest.Basic@18355a8]" name="teardown" is-config="true" duration-ms="583" started-at="2018-10-10T18:21:59Z" finished-at="2018-10-10T18:22:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:maintest.Basic@18355a8]" name="afterSuite" is-config="true" duration-ms="268" started-at="2018-10-10T18:22:00Z" finished-at="2018-10-10T18:22:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- maintest.Basic -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
