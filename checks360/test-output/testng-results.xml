<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="32336" started-at="2018-09-17T12:52:39Z" finished-at="2018-09-17T12:53:11Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="32336" started-at="2018-09-17T12:52:39Z" finished-at="2018-09-17T12:53:11Z">
      <class name="maintest.Basic">
        <test-method status="PASS" signature="beforeSuit()[pri:0, instance:maintest.Basic@1d0c81b]" name="beforeSuit" is-config="true" duration-ms="376" started-at="2018-09-17T18:22:38Z" finished-at="2018-09-17T18:22:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:maintest.Basic@1d0c81b]" name="beforetest" is-config="true" duration-ms="5751" started-at="2018-09-17T18:22:39Z" finished-at="2018-09-17T18:22:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@1d0c81b]" name="setup" is-config="true" duration-ms="19" started-at="2018-09-17T18:22:45Z" finished-at="2018-09-17T18:22:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="Login()[pri:0, instance:maintest.Basic@1d0c81b]" name="Login" duration-ms="26008" started-at="2018-09-17T18:22:45Z" finished-at="2018-09-17T18:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@1d0c81b]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-17T18:23:11Z" finished-at="2018-09-17T18:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=Basic.Login()[pri:0, instance:maintest.Basic@1d0c81b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="one()[pri:0, instance:maintest.Basic@1d0c81b]" name="one" duration-ms="4" started-at="2018-09-17T18:23:11Z" depends-on-methods="maintest.Basic.Login" finished-at="2018-09-17T18:23:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at maintest.Basic.one(Basic.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- one -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.Basic@1d0c81b]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-17T18:23:11Z" finished-at="2018-09-17T18:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.Basic.one() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.Basic@1d0c81b]" name="tearDown" is-config="true" duration-ms="508" started-at="2018-09-17T18:23:11Z" finished-at="2018-09-17T18:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=one status=FAILURE method=Basic.one()[pri:0, instance:maintest.Basic@1d0c81b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.Basic.one() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="two()[pri:0, instance:maintest.Basic@1d0c81b]" name="two" duration-ms="0" started-at="2018-09-17T18:23:11Z" depends-on-methods="maintest.Basic.one" finished-at="2018-09-17T18:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- two -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:maintest.Basic@1d0c81b]" name="teardown" is-config="true" duration-ms="0" started-at="2018-09-17T18:23:11Z" finished-at="2018-09-17T18:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:maintest.Basic@1d0c81b]" name="afterSuite" is-config="true" duration-ms="341" started-at="2018-09-17T18:23:11Z" finished-at="2018-09-17T18:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- maintest.Basic -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
