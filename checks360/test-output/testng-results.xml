<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="12" passed="11">
  <reporter-output>
    <line>
      <![CDATA[About to begin executing Test caseregistration]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test Method resides in maintest.SPcasereg]]>
    </line>
    <line>
      <![CDATA[Test Status: Failed]]>
    </line>
    <line>
      <![CDATA[Completed executing test caseregistration]]>
    </line>
  </reporter-output>
  <suite name="regression testing" duration-ms="100128" started-at="2018-09-24T13:18:08Z" finished-at="2018-09-24T13:19:48Z">
    <groups>
      <group name="s3">
        <method signature="SPcasereg.TC_SPINF_011()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_011" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_014()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_014" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_017()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_017" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_020()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_020" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_023()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_023" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_026()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_026" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_029()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_029" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_03()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_03" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_032()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_032" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_035()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_035" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_038()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_038" class="maintest.SPcasereg"/>
      </group> <!-- s3 -->
      <group name="spcase registration">
        <method signature="SPcasereg.Login()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="Login" class="maintest.SPcasereg"/>
      </group> <!-- spcase registration -->
      <group name="insuff">
        <method signature="SPcasereg.Login()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="Login" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_011()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_011" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_014()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_014" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_017()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_017" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_020()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_020" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_023()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_023" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_026()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_026" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_029()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_029" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_03()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_03" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_032()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_032" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_035()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_035" class="maintest.SPcasereg"/>
        <method signature="SPcasereg.TC_SPINF_038()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_038" class="maintest.SPcasereg"/>
      </group> <!-- insuff -->
      <group name="smoketest">
        <method signature="SPcasereg.Login()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="Login" class="maintest.SPcasereg"/>
      </group> <!-- smoketest -->
    </groups>
    <test name="caseregistration" duration-ms="100128" started-at="2018-09-24T13:18:08Z" finished-at="2018-09-24T13:19:48Z">
      <class name="maintest.SPcasereg">
        <test-method status="PASS" signature="beforeSuit()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="beforeSuit" is-config="true" duration-ms="165" started-at="2018-09-24T18:48:08Z" finished-at="2018-09-24T18:48:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="beforetest" is-config="true" duration-ms="4382" started-at="2018-09-24T18:48:08Z" finished-at="2018-09-24T18:48:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="10" started-at="2018-09-24T18:48:12Z" finished-at="2018-09-24T18:48:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="Login()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="Login" duration-ms="9246" started-at="2018-09-24T18:48:12Z" finished-at="2018-09-24T18:48:22Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-24T18:48:22Z" finished-at="2018-09-24T18:48:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=SPcasereg.Login()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_011()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_011" duration-ms="53789" started-at="2018-09-24T18:48:22Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_011 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:48:22Z" finished-at="2018-09-24T18:48:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_011 status=SUCCESS method=SPcasereg.TC_SPINF_011()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_014() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPINF_014()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_014" duration-ms="62" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_014 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_017() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_014 status=SUCCESS method=SPcasereg.TC_SPINF_014()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_014() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_017()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_017" duration-ms="50" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_017 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_020() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_017 status=SUCCESS method=SPcasereg.TC_SPINF_017()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_017() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_020()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_020" duration-ms="40" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_020 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_020 status=SUCCESS method=SPcasereg.TC_SPINF_020()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_020() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_023() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPINF_023()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_023" duration-ms="37" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_023 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_023 status=SUCCESS method=SPcasereg.TC_SPINF_023()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_023() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_026() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPINF_026()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_026" duration-ms="38" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_026 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_026 status=SUCCESS method=SPcasereg.TC_SPINF_026()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_026() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_029() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPINF_029()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_029" duration-ms="47" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_029 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_029 status=SUCCESS method=SPcasereg.TC_SPINF_029()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_029() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_032()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_032" duration-ms="42" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_032 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_032() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_032 status=SUCCESS method=SPcasereg.TC_SPINF_032()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_032() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_035()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_035" duration-ms="43" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_035 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_035() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_038() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:16Z" finished-at="2018-09-24T18:49:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_035 status=SUCCESS method=SPcasereg.TC_SPINF_035()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_035() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPINF_038()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_038" duration-ms="1432" started-at="2018-09-24T18:49:16Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:17Z">
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_038 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:17Z" finished-at="2018-09-24T18:49:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_038 status=SUCCESS method=SPcasereg.TC_SPINF_038()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_038() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="TC_SPINF_03()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="TC_SPINF_03" duration-ms="23908" started-at="2018-09-24T18:49:17Z" depends-on-methods="maintest.SPcasereg.TC_SPINF_011" finished-at="2018-09-24T18:49:41Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"id","selector":"ctl00_ContentPlaceHolder1_grdTaskList_ctl00_ctl04_btnClearInsuff"}
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60715}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.100, webStorageEnabled: true}
Session ID: 1378e060f5b36723c8b6e463fc3743ca
*** Element info: {Using=id, value=ctl00_ContentPlaceHolder1_grdTaskList_ctl00_ctl04_btnClearInsuff}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"ctl00_ContentPlaceHolder1_grdTaskList_ctl00_ctl04_btnClearInsuff"}
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-I-032', ip: '192.168.2.67', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\admin\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:60715}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.100, webStorageEnabled: true}
Session ID: 1378e060f5b36723c8b6e463fc3743ca
*** Element info: {Using=id, value=ctl00_ContentPlaceHolder1_grdTaskList_ctl00_ctl04_btnClearInsuff}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:363)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at environment.Utill.find(Utill.java:102)
	at environment.Utill.click_element(Utill.java:146)
	at actions.CaseOwnerInsuffClear.openCase(CaseOwnerInsuffClear.java:91)
	at maintest.SPcasereg.TC_SPINF_03(SPcasereg.java:1305)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Test Method resides in maintest.SPcasereg]]>
            </line>
            <line>
              <![CDATA[Test Status: Failed]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC_SPINF_03 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:17Z" finished-at="2018-09-24T18:49:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_03() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@f2b07d]" name="tearDown" is-config="true" duration-ms="6962" started-at="2018-09-24T18:49:41Z" finished-at="2018-09-24T18:49:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPINF_03 status=FAILURE method=SPcasereg.TC_SPINF_03()[pri:0, instance:maintest.SPcasereg@f2b07d] output=Test Method resides in maintest.SPcasereg]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPINF_03() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="teardown" is-config="true" duration-ms="0" started-at="2018-09-24T18:49:48Z" finished-at="2018-09-24T18:49:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:maintest.SPcasereg@f2b07d]" name="afterSuite" is-config="true" duration-ms="300" started-at="2018-09-24T18:49:48Z" finished-at="2018-09-24T18:49:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- maintest.SPcasereg -->
    </test> <!-- caseregistration -->
  </suite> <!-- regression testing -->
</testng-results>
