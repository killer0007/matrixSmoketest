<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="12" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="35833" started-at="2018-09-12T13:01:46Z" finished-at="2018-09-12T13:02:22Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="35833" started-at="2018-09-12T13:01:46Z" finished-at="2018-09-12T13:02:22Z">
      <class name="maintest.SPcasereg">
        <test-method status="PASS" signature="beforeSuit()[pri:0, instance:maintest.SPcasereg@2781e022]" name="beforeSuit" is-config="true" duration-ms="175" started-at="2018-09-12T18:31:46Z" finished-at="2018-09-12T18:31:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:maintest.SPcasereg@2781e022]" name="beforetest" is-config="true" duration-ms="1140" started-at="2018-09-12T18:31:46Z" finished-at="2018-09-12T18:31:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="9" started-at="2018-09-12T18:31:47Z" finished-at="2018-09-12T18:31:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="Login()[pri:0, instance:maintest.SPcasereg@2781e022]" name="Login" duration-ms="10390" started-at="2018-09-12T18:31:47Z" finished-at="2018-09-12T18:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-12T18:31:58Z" finished-at="2018-09-12T18:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=SPcasereg.Login()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-12T18:31:58Z" finished-at="2018-09-12T18:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_001()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_001" duration-ms="30" started-at="2018-09-12T18:31:58Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_001 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-12T18:31:58Z" finished-at="2018-09-12T18:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_001 status=SUCCESS method=SPcasereg.TC_SPCR_001()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-12T18:31:58Z" finished-at="2018-09-12T18:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_002()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_002" duration-ms="3127" started-at="2018-09-12T18:31:58Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_002 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_002 status=SUCCESS method=SPcasereg.TC_SPCR_002()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_003()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_003()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_003" duration-ms="33" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_003 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_003 status=SUCCESS method=SPcasereg.TC_SPCR_003()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_003()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_004()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_004()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_004" duration-ms="23" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_004 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="2" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_005()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_004 status=SUCCESS method=SPcasereg.TC_SPCR_004()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_004()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_005()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_005" duration-ms="21" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_005 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_005 status=SUCCESS method=SPcasereg.TC_SPCR_005()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_005()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_006()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_006" duration-ms="21" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_006 -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_006()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_007()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_006 status=SUCCESS method=SPcasereg.TC_SPCR_006()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_006()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TC_SPCR_007()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_007" duration-ms="22" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_007 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_007 status=SUCCESS method=SPcasereg.TC_SPCR_007()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_007()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_008()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_008()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_008" duration-ms="22" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_008 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_008 status=SUCCESS method=SPcasereg.TC_SPCR_008()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_008()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_009()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TC_SPCR_009()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_009" duration-ms="24" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_009 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_009 status=SUCCESS method=SPcasereg.TC_SPCR_009()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_009()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:01Z" finished-at="2018-09-12T18:32:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_010() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TC_SPCR_010()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_010" duration-ms="17701" started-at="2018-09-12T18:32:01Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:19Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//td[text()='Permanent']/../td[2]//input"}
  (Session info: headless chrome=69.0.3497.81)
  (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.4.0-134-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-IU-010', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-134-generic', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578700 (2f1ed5f9343c13..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:33589}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.81, webStorageEnabled: true}
Session ID: a4bfc9dd98eabdbce06ca64421924506
*** Element info: {Using=xpath, value=//td[text()='Permanent']/../td[2]//input}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//td[text()='Permanent']/../td[2]//input"}
  (Session info: headless chrome=69.0.3497.81)
  (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.4.0-134-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-IU-010', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-134-generic', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578700 (2f1ed5f9343c13..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:33589}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.81, webStorageEnabled: true}
Session ID: a4bfc9dd98eabdbce06ca64421924506
*** Element info: {Using=xpath, value=//td[text()='Permanent']/../td[2]//input}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at environment.Utill.find(Utill.java:81)
	at environment.Utill.click_element(Utill.java:146)
	at pages.CaseRegistration.selectcheck(CaseRegistration.java:138)
	at maintest.SPcasereg.TC_SPCR_010(SPcasereg.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_010 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="94" started-at="2018-09-12T18:32:19Z" finished-at="2018-09-12T18:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_010 status=FAILURE method=SPcasereg.TC_SPCR_010()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_010() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="setup" is-config="true" duration-ms="1" started-at="2018-09-12T18:32:19Z" finished-at="2018-09-12T18:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TC_SPCR_011()[pri:0, instance:maintest.SPcasereg@2781e022]" name="TC_SPCR_011" duration-ms="3055" started-at="2018-09-12T18:32:19Z" depends-on-methods="maintest.SPcasereg.Login" finished-at="2018-09-12T18:32:22Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"id","selector":"btnNewCase_Click"}
  (Session info: headless chrome=69.0.3497.81)
  (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.4.0-134-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-IU-010', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-134-generic', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578700 (2f1ed5f9343c13..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:33589}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.81, webStorageEnabled: true}
Session ID: a4bfc9dd98eabdbce06ca64421924506
*** Element info: {Using=id, value=btnNewCase_Click}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"btnNewCase_Click"}
  (Session info: headless chrome=69.0.3497.81)
  (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.4.0-134-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'KAD-IU-010', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-134-generic', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578700 (2f1ed5f9343c13..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:33589}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.81, webStorageEnabled: true}
Session ID: a4bfc9dd98eabdbce06ca64421924506
*** Element info: {Using=id, value=btnNewCase_Click}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:363)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
	at environment.Utill.find(Utill.java:109)
	at environment.Utill.click_element(Utill.java:146)
	at pages.Home.clickRegister(Home.java:91)
	at maintest.SPcasereg.TC_SPCR_011(SPcasereg.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_SPCR_011 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:maintest.SPcasereg@2781e022]" name="tearDown" is-config="true" duration-ms="84" started-at="2018-09-12T18:32:22Z" finished-at="2018-09-12T18:32:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_SPCR_011 status=FAILURE method=SPcasereg.TC_SPCR_011()[pri:0, instance:maintest.SPcasereg@2781e022] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void maintest.SPcasereg.TC_SPCR_011() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:maintest.SPcasereg@2781e022]" name="teardown" is-config="true" duration-ms="0" started-at="2018-09-12T18:32:22Z" finished-at="2018-09-12T18:32:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:maintest.SPcasereg@2781e022]" name="afterSuite" is-config="true" duration-ms="333" started-at="2018-09-12T18:32:22Z" finished-at="2018-09-12T18:32:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- maintest.SPcasereg -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
